- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Get clickhouse distrib
      ansible.builtin.get_url:
        url: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_amd64.deb"
        dest: "./{{ item }}_{{ clickhouse_version }}_amd64.deb"
        mode: "0644"
      with_items: "{{ clickhouse_packages }}"
      register: get_ch_distrib
      changed_when: get_ch_distrib is changed

    - name: Install clickhouse packages
      become: true
      become_method: sudo
      ansible.builtin.apt:
        deb: "./{{ item }}"
      with_items:
        - clickhouse-common-static_{{ clickhouse_version }}_amd64.deb
        - clickhouse-client_{{ clickhouse_version }}_amd64.deb
        - clickhouse-server_{{ clickhouse_version }}_amd64.deb
      notify: Start clickhouse service

    - name: Start Clickhouse-server
      ansible.builtin.systemd:
        name: "clickhouse-server.service"
        state: started
      become: true
      become_user: root

    - name: Clickhouse. Waiting while clickhouse-server is available...
      ansible.builtin.pause:
        seconds: 20
        echo: false

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc not in [0, 82]
      changed_when: create_db.rc == 0

- name: Install and configure Vector
  hosts: vector
  become: true
  vars:
    vector_documentation_link: "https://docs.vector.dev/"
    vector_user: "vector"
    vector_group: "vector"
    vector_bin_path: "/opt/vector/vector-{{ vector_os_arh }}-unknown-linux-gnu/bin/vector"
    params_exec_start_pre: ""
    params_exec_start: ""
    vector_env_path: "/etc/vector/vector.env"
    vector_log_output_stdout: "syslog"
    vector_log_output_stderr: "syslog"
  
  handlers:
    - name: Restart Vector service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: vector.service
        state: restarted
  
  tasks:
    - name: Create Vector user and group
      ansible.builtin.group:
        name: "{{ vector_group }}"
        state: present

    - name: Create Vector user and home directory
      ansible.builtin.user:
        name: "{{ vector_user }}"
        group: "{{ vector_group }}"
        home: "/home/{{ vector_user }}"
        shell: "/bin/bash"
        createhome: true

    - name: Download Vector distribution
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_os_arh }}-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector-{{ vector_os_arh }}-unknown-linux-gnu.tar.gz"
        mode: "0644"

    - name: Extract Vector distribution
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_os_arh }}-unknown-linux-gnu.tar.gz"
        dest: "/opt/vector"
        remote_src: true

    - name: Vector. Install vector binary file
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "{{ vector_bin_path }}"
        dest: "/usr/bin/"
        mode: "0755"
        owner: root
        group: root

    - name: Vector. Create etc directory
      become: true
      ansible.builtin.file:
        path: "/etc/vector"
        state: directory
        mode: "0755"

    - name: Vector. Create Vector config vector.yaml
      become: true
      ansible.builtin.template:
        src: "templates/vector/vector.j2"
        dest: "/etc/vector/vector.yaml"

    - name: Vector. Create vector.service daemon
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "/opt/vector/vector-{{ vector_os_arh }}-unknown-linux-gnu/etc/systemd/vector.service"
        dest: "/lib/systemd/system/"
        mode: "0644"
        owner: root
        group: root

    - name: Vector. Modify vector.service file ExecStart
      become: true
      ansible.builtin.replace:
        backup: true
        path: "/lib/systemd/system/vector.service"
        regexp: "^ExecStartPre=/usr/bin/vector validate$"
        replace: "ExecStartPre=/usr/bin/vector validate --config-yaml /etc/vector/vector.yaml"
      notify: Restart Vector service

    - name: Vector. Modify vector.service file ExecStartPre
      become: true
      ansible.builtin.replace:
        backup: true
        path: "/lib/systemd/system/vector.service"
        regexp: "^ExecStart=/usr/bin/vector$"
        replace: "ExecStart=/usr/bin/vector --config-yaml /etc/vector/vector.yaml"
      notify: Restart Vector service

    - name: Vector. Create user vector
      become: true
      ansible.builtin.user:
        create_home: false
        name: "vector"
           
    - name: Vector. Create data_dir
      become: true
      ansible.builtin.file:
        path: "{{ vector_data_dir }}"
        state: directory
        mode: 0755
        owner: "vector"
        group: "vector"
  
- name: Install Lighthouse
  hosts: lighthouse

  handlers:
    - name: Start nginx
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: nginx.service
        state: started

  tasks:
  - name: Lighthouse. Pre-install nginx & git client
    become: true
    ansible.builtin.apt:
      name: "{{ lighthouse_packages }}"
      update_cache: true

  - name: Lighthouse. Clone source code by git client
    become: true
    ansible.builtin.git:
      repo: "{{ lighthouse_code_src }}"
      dest: "{{ lighthouse_data_dir }}"

  - name: Lighthouse. Prepare nginx config
    become: true
    ansible.builtin.template:
      src: "templates/nginx/ligthouse.j2"
      dest: "/etc/nginx/conf.d/{{ lighthouse_nginx_conf }}"
    notify: Start nginx